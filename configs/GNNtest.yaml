# ======================= #
# GNN1 Configuration file #
# ======================= #


# Name of the model to use and the input dimension
model:
  name: 'ResidualGNN1'
  input_dim: 16 # number of features

# Path to the data
data:
  signal_path: Datasets/signal2.h5
  background_path: Datasets/ttbarbackground2.h5

Network_type:
  - GNN

# Example features to be used for training the model

features:
  node_features:
    - Aplanarity_jets
    - Centrality_all
  edge_features:
    - dRbb_avg_Sort4
  global_features:
    - HT_all

# Preparation: Coming soon!

# Hyperparameters for training the model
training:
  num_epochs: 10            # number of epochs to train the model, which are the number of times the model sees the entire training dataset
  learning_rate: 0.00001    # learning rate for the optimizer, which is a technique to update the weights
  weight_decay: 0.01        # L2 regularization, which is a technique to reduce overfitting
  batch_size: 32            # batch size for training, which is the number of samples per gradient update
  patience: 2               # epochs before early stopping/learning rate decay
  early_stopping: True      # early stopping if validation loss does not improve
  use_scheduler: True       # learning rate decay if validation loss does not improve
  factor: 0.1               # factor by which the learning rate will be reduced, if use_scheduler is True
  initialise_weights: True  # initialise weights of the model
  balance_classes: False     # use class weights to balance the dataset
  criterion: 'BCELoss'      # loss function to use
